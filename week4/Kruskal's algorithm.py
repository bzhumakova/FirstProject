#-------------------------------------------------
# Краскалдын Алгоритми
#-------------------------------------------------

# графтын кабыргаларыны тизмеси (узундугу, 1-чоку, 2-чоку)
R = [(13, 1, 2), (18, 1, 3), (17, 1, 4), (14, 1, 5), (22, 1, 6),
     (26, 2, 3), (22, 2, 5), (3, 3, 4), (19, 4, 6)]

Rs = sorted(R, key=lambda x: x[0])
U = set()   # байланышкан чокулардын тизмеси
D = {}      # байланышпашган чокулардын тизмеси
T = []      # кабыргалардын тизмеси

for r in Rs:
    if r[1] not in U or r[2] not in U:  # өзөктүк циклдан чыгаруу
        if r[1] not in U and r[2] not in U: # если обе вершины не соединены, то
            D[r[1]] = [r[1], r[2]]          # чокулардын номурларын сөздүктөгү ачкычтар байланыштыруу
            D[r[2]] = D[r[1]]               #
        else:                           # иначе
            if not D.get(r[1]):             # эгер сөздүктө оң жактагы чоку жок болсоб, анда
                D[r[2]].append(r[1])        # тизмеге биринчи чокуну кошобуз                D[r[1]] = D[r[2]]           # жана 1-чокунун номуру менен ачкычты кошобуз
            else:
                D[r[1]].append(r[2])        # антпес, 2-чоку менен жогорудагыдай операцияны жүргүзөбүз
                D[r[2]] = D[r[1]]

        T.append(r)             #
        U.add(r[1])             # U көптүгүнө чокуларды кошобуз
        U.add(r[2])

for r in Rs:    # чокулар аркылуу дагы бир жолу өтүп өзүнчө чокулардын тобун бириктиребиз
    if r[2] not in D[r[1]]:     # Эгер чокулар ар башка топто болсо аларды бириктиребиз
        T.append(r)             #
        gr1 = D[r[1]]
        D[r[1]] += D[r[2]]      # тизмелерди бириктиребиз
        D[r[2]] += gr1
print(T)